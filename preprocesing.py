from io import BytesIO

import cv2
import numpy as np
from lxml import html
from reportlab.graphics import renderPM
from svglib.svglib import svg2rlg

from recognition import predictor


def captcha_preprocesing(svg_data: str) -> np.array:
    tree = html.fromstring(svg_data)
    svg_elements = tree.xpath("//svg/path[@fill!='none']")

    svg_image = ""
    svg_image += """<svg xmlns="http://www.w3.org/2000/svg" width="150" height="50" viewBox="0,0,150,50">"""
    for element in svg_elements:
        svg_image += f"<path d='{element.attrib['d']}'></path>"
    svg_image += "</svg>"

    with BytesIO(bytes(svg_image, "utf-8")) as buf:
        buf.seek(0)
        # prepare and save image
        drawing = svg2rlg(buf)
        renderPM.drawToFile(drawing, buf, fmt="PNG")
        buf.seek(0)
        # procesing image to array
        image = np.asarray(bytearray(buf.read()), dtype="uint8")
        image = cv2.imdecode(image, cv2.IMREAD_COLOR)
        return image


def contours(image) -> list:
    result = []

    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    # mask
    th, im_th = cv2.threshold(gray, 250, 255, cv2.THRESH_BINARY_INV)
    im_floodfill = im_th.copy()
    h, w = im_th.shape[:2]
    mask = np.zeros((h + 2, w + 2), np.uint8)
    cv2.floodFill(im_floodfill, mask, (0, 0), 255)
    # Invert floodfilled image
    im_floodfill_inv = cv2.bitwise_not(im_floodfill)
    # Combine the two images to get the foreground.
    im_out = im_th | im_floodfill_inv

    # contours
    contours, hierarchy = cv2.findContours(
        im_out, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE
    )

    sorted_contours = sorted(contours, key=cv2.contourArea, reverse=True)
    # boxes draw
    boxes = []
    for cnt in sorted_contours[:3]:
        boxes.append(cv2.boundingRect(cnt))

    ordered_boxes = sorted(boxes, key=lambda x: x[0])
    for idx, (x, y, w, h) in enumerate(ordered_boxes):
        new_img = image[y : y + h, x : x + w]
        # tresholding black to black and white to white
        new_img[new_img <= 220] = 0
        new_img[new_img > 220] = 255

        result.append(cv2.resize(new_img, (20, 25)))

    return result


data = """<svg xmlns="http://www.w3.org/2000/svg" width="150" height="50" viewBox="0,0,150,50"><path fill="#d78ef0" d="M34.11 29.21L34.00 29.10L33.99 29.09Q32.20 29.17 30.99 30.50L31.02 30.53L30.97 30.49Q29.74 31.80 29.58 33.71L29.60 33.73L29.72 33.84Q29.52 35.97 30.74 36.98L30.58 36.82L30.73 36.97Q31.97 38.00 34.11 37.92L33.97 37.79L34.04 37.86Q36.41 37.75 37.36 36.80L37.36 36.80L37.26 36.70Q38.36 35.33 38.25 33.50L38.19 33.44L38.12 33.38Q38.01 31.51 36.93 30.31L37.03 30.41L36.93 30.32Q35.83 29.10 34.00 29.10ZM34.11 19.81L34.12 19.82L34.00 19.70Q32.64 19.63 31.30 20.12L31.41 20.23L31.40 20.22Q29.97 20.88 30.20 22.75L30.21 22.76L30.20 22.75Q30.80 26.58 34.15 26.58L34.11 26.54L34.07 26.51Q35.72 26.78 36.71 25.64L36.65 25.59L36.69 25.63Q37.60 24.40 37.64 22.84L37.58 22.78L37.69 22.89Q37.83 21.20 37.10 20.59L37.01 20.50L37.07 20.56Q35.36 19.68 34.06 19.76ZM33.76 40.28L33.74 40.26L30.83 40.40L30.76 40.33Q29.25 40.34 27.91 39.46L27.82 39.36L27.80 39.34Q26.52 38.29 26.67 35.44L26.66 35.43L26.65 35.42Q27.10 28.56 30.71 27.57L30.68 27.53L30.82 27.67Q28.37 26.59 27.04 21.23L27.18 21.37L27.09 21.27Q26.71 19.83 26.79 19.03L26.81 19.05L26.76 19.00Q27.13 16.94 30.82 16.90L30.76 16.84L30.95 17.02Q35.07 16.85 36.52 17.04L36.61 17.13L36.49 17.01Q40.28 17.49 40.74 19.51L40.75 19.52L40.73 19.49Q41.00 20.26 41.00 20.64L40.86 20.50L40.88 20.52Q40.94 21.27 40.75 21.88L40.69 21.82L40.78 21.91Q40.17 26.14 37.24 27.66L37.17 27.59L37.29 27.71Q40.62 28.33 41.11 33.62L41.30 33.81L41.22 33.73Q41.27 33.93 41.31 35.23L41.23 35.15L41.31 35.23Q41.25 37.84 39.65 38.90L39.63 38.88L39.64 38.89Q38.26 39.75 33.69 40.21ZM36.16 42.72L36.00 42.56L39.38 42.66L39.34 42.63Q41.08 42.73 42.60 42.01L42.60 42.00L42.63 42.04Q43.78 41.32 43.86 39.45L43.79 39.38L43.93 39.53Q43.92 38.37 43.54 36.43L43.49 36.39L43.57 36.46Q42.67 31.83 40.58 29.96L40.54 29.93L40.43 29.63L40.21 29.33L39.89 28.90L40.09 29.10Q41.53 27.53 42.44 23.38L42.46 23.40L42.54 23.48Q42.62 23.18 42.70 22.34L42.54 22.19L42.63 22.27Q42.74 21.63 42.67 21.02L42.65 20.99L42.52 20.87Q42.46 19.52 41.28 19.02L41.27 19.01L41.38 19.08L41.05 18.83L41.09 18.87Q40.92 18.24 39.74 17.44L39.61 17.32L39.75 17.41L39.68 17.34Q37.74 16.70 33.67 16.51L33.63 16.47L33.68 16.53Q32.18 16.46 30.80 16.58L30.69 16.46L30.80 16.57Q30.00 16.61 28.71 16.77L28.70 16.76L28.63 16.69Q26.75 17.13 26.52 18.77L26.53 18.77L26.45 18.69Q26.53 19.31 26.57 20.11L26.45 19.99L26.49 20.03Q26.64 20.59 27.21 22.95L27.10 22.85L27.08 22.83Q28.00 26.19 29.75 27.52L29.75 27.52L29.72 27.48L29.72 27.49Q26.94 28.78 26.41 33.96L26.52 34.07L26.55 34.09Q26.38 36.33 26.38 37.24L26.30 37.16L26.19 37.05Q26.43 39.00 27.61 39.91L27.52 39.82L27.61 39.92Q27.62 39.89 27.89 40.08L28.01 40.20L27.99 40.18Q28.90 42.35 36.02 42.58ZM35.73 31.55L35.74 31.56L35.65 31.47Q36.59 31.42 37.46 31.88L37.46 31.87L37.50 31.92Q37.99 33.01 37.95 33.54L37.80 33.39L37.88 33.48Q37.99 33.85 37.99 34.16L37.81 33.97L37.80 33.96Q37.83 36.35 35.54 37.19L35.58 37.23L35.52 37.17Q34.78 37.53 33.98 37.42L33.92 37.36L34.06 37.49Q32.96 37.61 31.81 37.15L31.74 37.08L31.75 37.09Q31.59 36.55 31.67 35.56L31.50 35.39L31.61 35.50Q31.78 33.92 32.98 32.71L33.01 32.73L33.02 32.74Q34.17 31.48 35.77 31.59ZM35.97 22.08L36.03 22.14L36.00 22.11Q36.70 21.90 37.23 22.06L37.24 22.06L37.36 22.98L37.32 22.94Q37.26 24.29 36.34 25.30L36.29 25.24L36.41 25.36Q35.48 26.36 34.11 26.17L34.12 26.18L34.07 26.12Q33.07 26.11 32.65 25.88L32.70 25.93L32.59 25.82Q32.64 25.65 32.53 24.96L32.58 25.02L32.55 24.98Q32.34 23.63 33.56 22.79L33.41 22.65L33.53 22.76Q34.59 22.07 35.99 22.11Z"/><path d="M5 41 C76 31,71 30,140 11" stroke="#67e4e4" fill="none"/><path d="M1 34 C71 48,78 18,140 13" stroke="#f0a68e" fill="none"/><path d="M7 19 C86 27,77 31,139 31" stroke="#53d953" fill="none"/><path fill="#4949e8" d="M108.17 29.27L108.18 29.28L108.12 29.22Q106.25 29.22 105.04 30.55L104.98 30.49L104.98 30.50Q103.74 31.81 103.59 33.71L103.58 33.70L103.61 33.74Q103.37 35.81 104.59 36.82L104.59 36.83L104.56 36.80Q105.88 37.91 108.02 37.83L108.10 37.91L107.96 37.78Q110.39 37.73 111.34 36.78L111.24 36.68L111.29 36.73Q112.34 35.30 112.22 33.47L112.18 33.43L112.28 33.53Q112.17 31.67 111.08 30.47L110.90 30.29L111.04 30.43Q109.92 29.19 108.09 29.19ZM107.95 19.65L108.13 19.83L108.09 19.79Q106.55 19.54 105.21 20.03L105.29 20.11L105.36 20.18Q103.98 20.89 104.21 22.76L104.16 22.70L104.22 22.77Q104.71 26.50 108.06 26.50L108.01 26.44L108.09 26.52Q109.73 26.79 110.72 25.65L110.56 25.49L110.57 25.50Q111.71 24.51 111.74 22.95L111.57 22.77L111.75 22.95Q111.78 21.15 111.06 20.55L111.01 20.50L111.09 20.57Q109.39 19.72 108.10 19.79ZM107.83 40.35L107.82 40.34L104.65 40.22L104.67 40.23Q103.21 40.30 101.88 39.43L101.79 39.34L101.79 39.34Q100.48 38.25 100.63 35.40L100.76 35.52L100.75 35.51Q101.05 28.51 104.67 27.52L104.74 27.59L104.78 27.64Q102.49 26.71 101.16 21.34L101.13 21.32L101.22 21.41Q100.69 19.81 100.76 19.01L100.93 19.18L100.91 19.15Q101.21 17.02 104.90 16.98L104.92 16.99L104.89 16.97Q109.15 16.93 110.60 17.12L110.50 17.02L110.48 17.00Q114.30 17.51 114.76 19.52L114.89 19.66L114.74 19.51Q114.87 20.14 114.87 20.52L114.87 20.52L114.89 20.53Q115.03 21.36 114.84 21.97L114.68 21.81L114.80 21.93Q114.12 26.09 111.19 27.61L111.11 27.53L111.25 27.66Q114.68 28.40 115.18 33.69L115.16 33.67L115.26 33.77Q115.21 33.87 115.25 35.17L115.32 35.23L115.17 35.09Q115.34 37.93 113.74 38.99L113.78 39.03L113.73 38.98Q112.30 39.80 107.74 40.26ZM110.02 42.58L110.09 42.65L113.41 42.70L113.49 42.77Q115.06 42.71 116.58 41.99L116.72 42.13L116.63 42.03Q117.75 41.28 117.82 39.42L117.82 39.42L117.80 39.40Q117.97 38.43 117.59 36.49L117.58 36.48L117.46 36.35Q116.68 31.84 114.59 29.98L114.57 29.96L114.23 29.43L114.15 29.27L114.02 29.03L114.02 29.03Q115.70 27.70 116.61 23.55L116.44 23.38L116.46 23.40Q116.50 23.05 116.57 22.22L116.58 22.22L116.64 22.28Q116.67 21.55 116.60 20.95L116.71 21.06L116.55 20.90Q116.47 19.53 115.29 19.03L115.29 19.03L115.35 19.05L115.09 18.87L115.18 18.96Q114.96 18.28 113.78 17.48L113.66 17.36L113.62 17.29L113.74 17.40Q111.73 16.69 107.65 16.50L107.74 16.58L107.73 16.57Q106.07 16.36 104.70 16.47L104.81 16.58L104.81 16.59Q103.97 16.58 102.67 16.73L102.66 16.71L102.55 16.60Q100.70 17.08 100.47 18.72L100.46 18.71L100.39 18.63Q100.51 19.29 100.55 20.09L100.50 20.04L100.56 20.10Q100.58 20.54 101.15 22.90L101.08 22.82L101.19 22.93Q102.03 26.21 103.78 27.55L103.65 27.41L103.78 27.54L103.72 27.49Q100.95 28.79 100.42 33.96L100.55 34.09L100.57 34.12Q100.33 36.28 100.33 37.19L100.25 37.11L100.29 37.15Q100.35 38.93 101.53 39.84L101.50 39.81L101.56 39.87Q101.62 39.89 101.89 40.08L101.93 40.12L101.91 40.10Q103.02 42.47 110.14 42.70ZM109.73 31.55L109.64 31.46L109.80 31.62Q110.67 31.51 111.55 31.96L111.60 32.01L111.58 32.00Q111.81 32.83 111.77 33.36L111.79 33.38L111.92 33.51Q111.86 33.72 111.86 34.02L111.81 33.98L111.98 34.14Q111.88 36.40 109.59 37.24L109.65 37.30L109.62 37.26Q108.83 37.58 108.03 37.46L108.00 37.44L107.97 37.41Q106.96 37.61 105.81 37.15L105.71 37.05L105.71 37.05Q105.41 36.37 105.49 35.38L105.58 35.47L105.56 35.45Q105.82 33.96 107.02 32.74L106.91 32.63L106.95 32.67Q108.11 31.42 109.71 31.53ZM110.04 22.15L109.86 21.97L109.90 22.02Q110.82 22.02 111.35 22.17L111.32 22.15L111.22 22.84L111.27 22.89Q111.27 24.30 110.35 25.31L110.42 25.37L110.47 25.42Q109.46 26.33 108.09 26.14L108.01 26.07L108.08 26.14Q107.01 26.06 106.60 25.83L106.72 25.96L106.68 25.91Q106.69 25.69 106.57 25.01L106.53 24.97L106.57 25.00Q106.23 23.53 107.45 22.69L107.57 22.81L107.48 22.72Q108.45 21.94 109.86 21.98Z"/><path fill="#72e8e8" d="M72.45 39.39L72.62 39.55L72.58 39.51Q71.76 39.34 71.07 39.37L71.11 39.41L71.21 39.51Q70.53 39.63 69.84 39.63L69.85 39.64L69.74 39.52Q70.16 36.06 70.16 32.64L70.24 32.72L70.24 32.72Q68.35 32.69 67.43 32.69L67.44 32.70L67.39 32.64Q66.65 32.75 64.82 32.67L64.79 32.64L64.76 32.61Q64.86 32.40 64.67 29.92L64.63 29.89L64.61 29.87Q67.10 30.34 70.07 30.34L70.09 30.36L70.12 30.39Q69.91 26.03 69.49 23.44L69.40 23.35L69.42 23.37Q70.36 23.63 71.16 23.63L71.06 23.52L72.75 23.58L72.71 23.54Q72.58 27.90 72.58 30.49L72.55 30.46L72.45 30.36Q74.74 30.48 77.93 30.13L77.89 30.09L77.84 30.03Q77.82 31.47 77.82 32.69L77.80 32.67L77.82 32.68Q77.43 32.56 76.63 32.60L76.68 32.65L76.60 32.57Q75.76 32.72 75.15 32.75L75.16 32.76L75.02 32.62Q75.07 32.68 72.41 32.68L72.36 32.63L72.41 36.11L72.32 36.02Q72.49 37.82 72.60 39.54ZM78.35 29.63L78.37 29.65L78.24 29.52Q76.40 29.89 74.53 29.97L74.58 30.01L74.53 29.96Q74.71 26.75 75.13 24.89L75.27 25.03L75.25 25.01Q74.40 24.93 72.99 25.08L73.15 25.24L73.36 23.19L73.29 23.13Q70.60 23.07 68.93 22.95L68.87 22.89L68.86 22.89Q69.52 26.09 69.71 29.98L69.84 30.11L69.85 30.12Q67.98 29.97 64.29 29.36L64.21 29.27L64.15 29.21Q64.59 30.57 64.59 33.20L64.45 33.06L66.01 33.09L65.96 33.04Q65.93 33.73 65.77 35.14L65.78 35.15L69.90 35.04L69.86 35.01Q69.55 38.08 69.25 39.91L69.27 39.93L69.31 39.97Q70.11 40.02 71.52 39.90L71.37 39.75L71.56 39.93Q71.50 40.56 71.46 41.89L71.36 41.79L71.49 41.92Q71.90 41.81 75.52 41.96L75.65 42.09L75.66 42.09Q74.60 38.87 74.37 34.91L74.43 34.97L74.48 35.02Q77.82 35.12 79.92 35.50L79.79 35.38L79.80 35.39Q79.55 34.38 79.55 33.43L79.67 33.54L79.74 31.72L79.73 31.70Q79.34 31.53 78.80 31.57L78.89 31.66L78.05 31.62L78.13 31.70Q78.08 30.85 78.19 29.48Z"/></svg>"""

image = captcha_preprocesing(data)
resp = contours(image)

first_pred = predictor(resp[0])
second_pred = predictor(resp[2])
sign_pred = predictor(resp[1])
print(eval(f"{first_pred} {sign_pred} {second_pred}"))
